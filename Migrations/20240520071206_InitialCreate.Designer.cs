// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfApp1;

#nullable disable

namespace WpfApp1.Migrations
{
    [DbContext(typeof(TradeCompletedContext))]
    [Migration("20240520071206_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WpfApp1.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int?>("PickUpCode")
                        .HasColumnType("int");

                    b.Property<int?>("PickUpPointId")
                        .HasColumnType("int")
                        .HasColumnName("PickUpPointID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__C3905BAFF891EA7F");

                    b.HasIndex("PickUpPointId");

                    b.HasIndex("UserId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("WpfApp1.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("ProductCount")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("PK__OrderPro__08D097C16AF54AA1");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("WpfApp1.PickUpPoint", b =>
                {
                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PointID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PointId"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("House")
                        .HasColumnType("tinyint");

                    b.Property<int?>("PostIndex")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PointId")
                        .HasName("PK__PickUpPo__40A977819909981A");

                    b.ToTable("PickUpPoint", (string)null);
                });

            modelBuilder.Entity("WpfApp1.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ArticleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("CurrentDiscount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaximumDiscountAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__B40CC6ED011FCFDE");

                    b.HasIndex("Category");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("WpfApp1.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId")
                        .HasName("PK__ProductC__19093A2B554A75A9");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("WpfApp1.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3A51668687");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("WpfApp1.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Lfp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LFP");

                    b.Property<string>("Login")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCACB38A9B18");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("WpfApp1.Order", b =>
                {
                    b.HasOne("WpfApp1.PickUpPoint", "PickUpPoint")
                        .WithMany("Orders")
                        .HasForeignKey("PickUpPointId")
                        .HasConstraintName("FK__Order__PickUpPoi__4BAC3F29");

                    b.HasOne("WpfApp1.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Order__UserID__4CA06362");

                    b.Navigation("PickUpPoint");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WpfApp1.OrderProduct", b =>
                {
                    b.HasOne("WpfApp1.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderProd__Order__4F7CD00D");

                    b.HasOne("WpfApp1.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderProd__Produ__5070F446");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WpfApp1.Product", b =>
                {
                    b.HasOne("WpfApp1.ProductCategory", "CategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Category")
                        .HasConstraintName("FK__Product__Categor__48CFD27E");

                    b.Navigation("CategoryNavigation");
                });

            modelBuilder.Entity("WpfApp1.User", b =>
                {
                    b.HasOne("WpfApp1.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__RoleID__4222D4EF");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("WpfApp1.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("WpfApp1.PickUpPoint", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WpfApp1.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("WpfApp1.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WpfApp1.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("WpfApp1.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
